# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-one
# spec:
#   type: ClusterIP
#   ports:
#   - port: 80
#     targetPort: 80
#   selector:
#     app: hello-one
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: hello-one
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: hello-one
#   template:
#     metadata:
#       labels:
#         app: hello-one
#     spec:
#       containers:
#       - name: hello-ingress
#         image: nginxdemos/hello
#         ports:
#         - containerPort: 80
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: echo-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
# spec:
#   tls:
#   - hosts:
#     - api.tabber.online
#     secretName: tabby-ingress-tls
#   rules:
#   - host: api.tabber.online
#     http:
#       paths:
#       - backend:
#           serviceName: hello-one
#           servicePort: 80

# apiVersion: cert-manager.io/v1alpha2
# kind: ClusterIssuer
# metadata:
#  name: letsencrypt-staging
#  namespace: cert-manager
# spec:
#  acme:
#    # The ACME server URL
#    server: https://acme-staging-v02.api.letsencrypt.org/directory
#    # Email address used for ACME registration
#    email: mandeep.sidhu2@gmail.com
#    # Name of a secret used to store the ACME account private key
#    privateKeySecretRef:
#      name: letsencrypt-staging
#    # Enable the HTTP-01 challenge provider
#    solvers:
#    - http01:
#        ingress:
#          class:  nginx
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: hello-app-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
#     #acme.cert-manager.io/http01-edit-in-place: "true"
# spec:
#   tls:
#   - hosts:
#     - api.tabber.online
#     secretName: example-tls
#   rules:
#   - host: api.tabber.online
#     http:
#       paths:
#       - backend:
#           serviceName: hello-one
#           servicePort: 80

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: tabby-kubernetes-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
#     # nginx.ingress.kubernetes.io/ssl-redirect: "false"
# spec:
#   tls:
#   - hosts:
#     - api.tabber.online
#     secretName: tabby-tls
#   rules:
#   - host:  example-tls
#     http:
#       paths:
#       - backend:
#           service:
#             name: hello-one
#             port:
#               number: 80
#         path: /
#         pathType: ImplementationSpecific

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-configuration
#   labels:
#     app.kubernetes.io/name: ingress-nginx
#     #app.kubernetes.io/part-of: nginx-ingress-controller
# data:
#   use-forwarded-headers: "true"
#   compute-full-forwarded-for: "true"
#   use-proxy-protocol: "true"

